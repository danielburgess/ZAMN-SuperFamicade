object FSynt: TSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Default'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      FormatType = ftCustomFont
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id std'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clPurple
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 6447871
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Label'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'B Bus Registers'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 13041629
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 4144959
    end
    item
      DisplayName = 'DMA/HDMA Registers'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 12628198
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 3223857
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clActiveCaption
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Internal CPU Registers'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 8585215
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 3487029
    end
    item
      DisplayName = 'Old Joypad Registers'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clAppWorkSpace
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      BgColor = 2894892
    end
    item
      DisplayName = 'Variable'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 7568415
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = ';.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Labels'
      StyleName = 'Label'
      Expression = '@+\w*'#13#10
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Absolute Hex'
      StyleName = 'Number'
      TokenType = 5
      Expression = '[\#][\$][0-9a-fA-F]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Ident'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_%]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Str'
      StyleName = 'String'
      TokenType = 4
      Expression = '("|'#39') .*? \1'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\.,:\-\+\*\\/%@<>\(\)\[\]\{\}\?]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'B Bus Registers'
      StyleName = 'B Bus Registers'
      TokenType = 2
      Expression = '[\$]21{1,3}[0-9a-f]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'DMA/HDMA Registers'
      StyleName = 'DMA/HDMA Registers'
      TokenType = 2
      Expression = '[\$]43{1,3}[0-9a-f]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Internal CPU Registers'
      StyleName = 'Internal CPU Registers'
      TokenType = 2
      Expression = '[\$]42{1,3}[0-9a-f]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Token rule 1'
      StyleName = 'Old Joypad Registers'
      TokenType = 2
      Expression = '[\$]401[6-7]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Address Hex'
      StyleName = 'Symbol'
      TokenType = 5
      Expression = '[\$][0-9a-fA-F]+\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Variables'
      StyleName = 'Variable'
      TokenType = 2
      Expression = '!+\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Internal Registers'
      StyleName = 'Symbol'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'a'
            'x'
            'y')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpBound
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Address Bus B Registers'
      StyleName = 'B Bus Registers'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '$2100'
            '$2101'
            '$2102'
            '$2103'
            '$2104'
            '$2105'
            '$2106'
            '$2107'
            '$2108'
            '$2109'
            '$210A'
            '$210B'
            '$210C'
            '$210D'
            '$210E'
            '$210F'
            '$2110'
            '$2111'
            '$2112'
            '$2113'
            '$2114'
            '$2115'
            '$2116'
            '$2117'
            '$2118'
            '$2119'
            '$211A'
            '$211B'
            '$211C'
            '$211D'
            '$211E'
            '$211F'
            '$2120'
            '$2121'
            '$2122'
            '$2123'
            '$2124'
            '$2125'
            '$2126'
            '$2127'
            '$2128'
            '$2129'
            '$212A'
            '$212B'
            '$212C'
            '$212D'
            '$212E'
            '$212F'
            '$2130'
            '$2131'
            '$2132'
            '$2133'
            '$2134'
            '$2135'
            '$2136'
            '$2137'
            '$2138'
            '$2139'
            '$213A'
            '$213B'
            '$213C'
            '$213D'
            '$213E'
            '$213F'
            '$2140'
            '$2141'
            '$2142'
            '$2143'
            '$2180'
            '$2181'
            '$2182'
            '$2183')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      Pen.Color = clPurple
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Old Style Joypad Registers '
      StyleName = 'Old Joypad Registers'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '$4016'
            '$4017')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      Pen.Color = clGray
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Internal CPU Registers'
      StyleName = 'Internal CPU Registers'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '$4200'
            '$4201'
            '$4202'
            '$4203'
            '$4204'
            '$4205'
            '$4206'
            '$4207'
            '$4208'
            '$4209'
            '$420A'
            '$420B'
            '$420C'
            '$420D'
            '$4210'
            '$4211'
            '$4212'
            '$4213'
            '$4214'
            '$4215'
            '$4216'
            '$4217'
            '$4218'
            '$4219'
            '$421A'
            '$421B'
            '$421C'
            '$421D'
            '$421E'
            '$421F')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      Pen.Color = clTeal
      IgnoreAsParent = False
    end
    item
      DisplayName = 'DMA/HDMA Registers'
      StyleName = 'DMA/HDMA Registers'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '$4300'
            '$4301'
            '$4302'
            '$4303'
            '$4304'
            '$4305'
            '$4306'
            '$4307'
            '$4308'
            '$4309'
            '$430A'
            '$4310'
            '$4311'
            '$4312'
            '$4313'
            '$4314'
            '$4315'
            '$4316'
            '$4317'
            '$4318'
            '$4319'
            '$431A'
            '$4320'
            '$4321'
            '$4322'
            '$4323'
            '$4324'
            '$4325'
            '$4326'
            '$4327'
            '$4328'
            '$4329'
            '$432A'
            '$4330'
            '$4331'
            '$4332'
            '$4333'
            '$4334'
            '$4335'
            '$4336'
            '$4337'
            '$4338'
            '$4339'
            '$433A'
            '$4340'
            '$4341'
            '$4342'
            '$4343'
            '$4344'
            '$4345'
            '$4346'
            '$4347'
            '$4348'
            '$4349'
            '$434A'
            '$4350'
            '$4351'
            '$4352'
            '$4353'
            '$4354'
            '$4355'
            '$4356'
            '$4357'
            '$4358'
            '$4359'
            '$435A'
            '$4360'
            '$4361'
            '$4362'
            '$4363'
            '$4364'
            '$4365'
            '$4366'
            '$4367'
            '$4368'
            '$4369'
            '$436A'
            '$4370'
            '$4371'
            '$4372'
            '$4373'
            '$4374'
            '$4375'
            '$4376'
            '$4377'
            '$4378'
            '$4379'
            '$437A')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpAny
      Pen.Color = clGreen
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Keywords'
      StyleName = 'Id std'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'adc'
            'and'
            'asl'
            'bcc'
            'bcs'
            'beq'
            'bit'
            'bmi'
            'bne'
            'bpl'
            'brk'
            'bvc'
            'bvs'
            'clc'
            'cld'
            'cli'
            'clv'
            'cmp'
            'cpx'
            'cpy'
            'db'
            'dec'
            'dex'
            'dey'
            'eor'
            'inc'
            'incbin'
            'inx'
            'iny'
            'jml'
            'jmp'
            'jsr'
            'lda'
            'ldx'
            'ldy'
            'lorom'
            'lsr'
            'mvn'
            'mvp'
            'nop'
            'ora'
            'org'
            'pha'
            'php'
            'phx'
            'phy'
            'pla'
            'plp'
            'plx'
            'ply'
            'rep'
            'rol'
            'ror'
            'rti'
            'rts'
            'sbc'
            'sec'
            'sed'
            'sei'
            'sep'
            'sta'
            'stx'
            'sty'
            'tax'
            'tay'
            'tsx'
            'txa'
            'txs'
            'tya'
            'tyx')
          TokenTypes = 4
          IgnoreCase = True
        end>
      HighlightPos = cpBound
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '; Purpose: Zombies ate my Neighbors Modified HUD writer'
    '; Date: 09 March 2016'
    '; Author: DackR'
    ''
    '!variable = $f00'
    ''
    
      '; Below is the section the performs the DMA transfer of this dat' +
      'a into VRAM:'
    'org $80c34a'
    ''
    'sta $4200'
    ''
    'sta $4016'
    '@MyLabel:'
    ''
    'lda #$1801'#9'; #$01 <- 2 registers, write once'
    #9#9#9'      ; (writes to low and high register)'
    #9#9#9'      ; #$18 <- Specify B-Bus register to access..'
    '            ; $00:2118 - (VRAM Data write register)'
    
      'sta $4300 '#9';Write to DMA control register and Destination Channe' +
      'l'
    ''
    'lda #$5efa'#9'; *Modified* to 5ff6'
    'sta $4302 '#9'; DMA Transfer Source Address'
    
      #9#9#9'      ; (DMA control was set earlier to 2 registers, write on' +
      'ce)'
    #9#9#9'      ; ^^Write #$36 to $4302 and #$5f to $4303'
    ''
    
      'lda #$007e '#9'; #$7e is the bank of the source data being transfer' +
      'red'
    #9#9#9'      ; ^^^^ This is a WRAM bank'
    'sta $4304  '#9'; DMA Transfer Source Bank Register'
    ''
    'lda #$00fc  ; <---Specifying size of transfer *Modified*'
    
      'sta $4305 '#9'; DMA Transfer Size Register (Set number of bytes to ' +
      'transfer)'
    ''
    'lda #$6422 '#9'; *Modified*'
    'sta $2116 '#9'; VRAM Address register '
    
      #9#9#9'      ; (Not sure why, but this Transfer actually writes to $' +
      'C844...)'
    ''
    'sep #$20  '#9'; Set CPU flag... 8-bit mode'
    ''
    'lda #$80  '#9'; (1000 0000) <- Sets Address increment mode'
    #9#9#9'      ;  ^ Increments after $2119 (high byte) '
    #9#9#9'      ;    is written to desination.'
    #9#9#9'      ;   ^^^ These 3 Bits are unused'
    #9#9#9'      ;       ^^ No address remapping'
    #9#9#9'      ;         ^^ Normal increment by one'
    'sta $2115  '#9'; Write #$80 (10000000) to Video Port Control '
    #9#9#9#9#9
    'lda #$01 '#9
    'sta $420b  '#9'; Enable DMA Channel #1 (commence transfer)'
    ''
    'rep #$30   '#9'; Back to 16-bit mode'
    ''
    ';END OF CODE')
  TokenTypeNames.Strings = (
    'Label'
    'Comment'
    'Identifier'
    'Symbol'
    'String'
    'Number')
  Extentions = 'asm'
  LexerName = 'Assembly 65816c'
  Notes.Strings = (
    '')
  LineComment = ';'
  Charset = DEFAULT_CHARSET
  Left = 144
  Top = 184
end
